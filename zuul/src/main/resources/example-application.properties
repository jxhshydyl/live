server.port=10826

spring.application.name=gateway

# 这里写自己的内网ip
eureka.instance.hostname=127.0.0.1

# 这里写eureka服务器的ip
eureka.server.hostname=127.0.0.1

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://${eureka.server.hostname}:2233/eureka

feign.hystrix.enabled=true

# \u7F51\u5173--valid
#zuul.routes.valid.path=/valid/**
#zuul.routes.valid.service-id=valid
#表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，# 这个router将以服务名开头的请求路径转发到对应的服务
spring.cloud.gateway.discovery.locator.enabled=false
#将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了,比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上
spring.cloud.gateway.discovery.locator.lower-case-service-id=true 
spring.cloud.gateway.routes[0].id=ore
spring.cloud.gateway.routes[0].uri=lb://ore
spring.cloud.gateway.routes[0].order=-1
spring.cloud.gateway.routes[0].predicates[0]= Path=/ore/**

spring.cloud.gateway.routes[1].id=kline
spring.cloud.gateway.routes[1].uri=lb://kline
spring.cloud.gateway.routes[1].order=-1
spring.cloud.gateway.routes[1].predicates[0]= Path=/kline/**

spring.cloud.gateway.routes[2].id=admin
spring.cloud.gateway.routes[2].uri=lb://admin
spring.cloud.gateway.routes[2].order=-1
spring.cloud.gateway.routes[2].predicates[0]= Path=/admin/**

spring.cloud.gateway.routes[3].id=candle
spring.cloud.gateway.routes[3].uri=lb://candle
spring.cloud.gateway.routes[3].order=-1
spring.cloud.gateway.routes[3].predicates[0]= Path=/candles/**

spring.cloud.gateway.routes[4].id=asset
spring.cloud.gateway.routes[4].uri=lb://asset
spring.cloud.gateway.routes[4].order=-1
spring.cloud.gateway.routes[4].predicates[0]= Path=/asset/**

spring.cloud.gateway.routes[5].id=misc
spring.cloud.gateway.routes[5].uri=lb://misc
spring.cloud.gateway.routes[5].order=-1
spring.cloud.gateway.routes[5].predicates[0]= Path=/misc/**

spring.cloud.gateway.routes[6].id=vote
spring.cloud.gateway.routes[6].uri=lb://asset
spring.cloud.gateway.routes[6].order=-1
spring.cloud.gateway.routes[6].predicates[0]= Path=/vote/**

spring.cloud.gateway.routes[7].id=block
spring.cloud.gateway.routes[7].uri=lb://browser
spring.cloud.gateway.routes[7].order=-1
spring.cloud.gateway.routes[7].predicates[0]= Path=/block/**

spring.security.user.name=contract
spring.security.user.password=future123987

# 这是有效的！这样写即可.
hystrix.command.default.execution.isolation.strategy=THREAD
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=600000
#hystrix.command."FeignService#getUser".execution.isolation.thread.timeoutInMilliseconds=60000
# 最小线程数
hystrix.threadpool.default.coreSize=10
# 最大线程数
hystrix.threadpool.default.maximumSize=1000
# 线程在被释放之前将使用多长时间
hystrix.threadpool.default.keepAliveTimeMinutes=1
# 设为 true ，允许设置最小线程数 和 最大线程数
hystrix.threadpool.default.allowMaximumSizeToDivergeFromCoreSize=true
# 负载均衡策略
ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.ZoneAvoidanceRule
#以下配置全局有效
ribbon.eureka.enabled=true
#建立连接超时时间，原1000，一秒。
ribbon.ConnectTimeout=6000
#请求处理的超时时间，1分钟
ribbon.ReadTimeout=60000
#所有操作都重试
ribbon.OkToRetryOnAllOperations=true
#重试发生，更换节点数最大值
ribbon.MaxAutoRetriesNextServer=10
#单个节点重试最大值
ribbon.MaxAutoRetries=1

# 熔断降级配置
filters[0].name=Hystrix
filters[0].args.name=default
filters[0].args.fallbackUri='forward:/defaultfallback'

#jwt密码
security.oauth2.jwt.signingKey=123456
gate.ignore.authentication.startWith=/oauth,/login,/markets,/kline,/users/login,/users/register

spring.security.oauth2.jwt.signingKey=123456

gate.ignore.authentication.need=/admin
# redis的配置
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000

jetcache.statIntervalMinutes=1
jetcache.areaInCacheName=false
jetcache.hidePackages=com.meizan.ancon
# 默认永久本地缓存
jetcache.local.default.type=caffeine
jetcache.local.default.keyConvertor=fastjson
# 默认永久的远程缓存
jetcache.local.remote.default.type=redis
jetcache.local.remote.default.keyConvertor=fastjson
jetcache.local.remote.default.valueEncoder=kryo
jetcache.local.remote.default.valueDecoder=kryo
jetcache.local.remote.default.poolConfig.minIdle=5
jetcache.local.remote.default.poolConfig.maxIdle=20
jetcache.local.remote.default.poolConfig.maxTotal=50
jetcache.local.remote.default.host=127.0.0.1
jetcache.local.remote.default.port=6379